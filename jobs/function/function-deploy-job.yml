parameters:
- name: environmentName
  type: string

- name: siteName
  type: string  

- name: planType
  type: string

- name: regionName
  type: string  

jobs:
  - deployment: AzureFunction
    displayName: Deploy Azure Function
    environment: '${{ parameters.environmentName }}'
    variables:
    - template: '../../variables/pipeline-variables.${{ parameters.environmentName }}.yml'
      parameters:
        serviceName: siteName
    strategy: 
      runOnce:
        deploy:
          steps:

          - script: |
              echo "Determine plan"
              echo ${{ parameters.regionName }}
              echo  $(parameters.regionName)
              echo ${{ parameters.planType }}
              echo  $(parameters.planType)
              
          - ${{ if and(eq(parameters.planType, 'AppServicePlan'), eq(parameters.regionName, 'AU')) }}:
            - bash: |
                echo "AU"
                echo "##vso[task.setvariable variable=functionPlanName;]$(AppServicePlanName)"
          - ${{ if eq(parameters.planType, 'Consumption') }}:
            - bash: |
                echo "UK"
                echo "##vso[task.setvariable variable=functionPlanName;]$(ConsumptionPlanName)"
          - script: |
              echo $(functionPlanName) 

          # - task: AzureCLI@2
          #   displayName: 'Deploy Azure Function'
          #   inputs:
          #     azureSubscription: ${{ variables.AzureSubscriptionName }}
          #     scriptType: pscore
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       az account set --subscription ${{variables.AzureSubscriptionId}}
          #       az deployment sub create `
          #       --name azfn.deploy.v1 `
          #       --location ${{variables.AzureLocationShort}} `
          #       --template-file "$(Pipeline.Workspace)/drop/bicep/main.bicep" `
          #       --parameters `
          #       siteName=${{parameters.siteName}} `
          #       resourceGroupName=${{variables.ResourceGroupName}} `
          #       resourceGroupLocation=${{variables.AzureLocationShort}} `
          #       storageAccountName=${{variables.StorageAccountName}} `
          #       tags='${{variables.AzureTags}}' `
          #       hostingPlanName=$(functionPlanName)
            

 